Documentação do componente HBoot (Hexagon® Boot)
================================================

Hexagon® Boot (HBoot). Copyright © 2020-2021 Felipe Miguel Nery Lunkes
Todos os direitos reservados.

Versão deste arquivo: 1.0

Sobre o HBoot:
==============

O Hexagon® Boot (HBoot) é um componente desenvolvido para se tornar um segundo estágio de inicialização para o Hexagon®. Até então, a inicialização era realizada por apenas um estágio, que definia um ambiente bem básico, carregava o Hexagon® na memória e imediatamente passava o controle para ele, fornecendo um conjunto bem pequeno e limitado de parâmetros, uma vez que o código desse estágio fica restrito a 512 bytes, o que limita a realização de diversos testes e processamento de dados. Como o HBoot, foi possível expandir o número de tarefas realizadas antes da execução do Hexagon®, além da possibilidade de fornecer mais informações a respeito do ambiente da máquina e de inicialização. O HBoot é capaz de verificar quais unidades de disco estão disponíveis na máquina, emitir um tom de inicialização, obter a quantidade de memória RAM disponível instalada e permitir ou não o seguimento do processo de boot de acordo com essa informação. Além disso, permite o carregamento de módulos no formato HBoot, que podem ser úteis, no futuro, para permitir testes de hardware, como testes de memória e disco, caso os módulos estejam disponíveis no disco. Os módulos podem ser utilizados também para extender as funções do HBoot. No contexto do desenvolvimento do Sistema Operacional Andromeda®, cuja característica principal é ser uma distribuição do kernel Hexagon® juntamente com utilitários Andromeda® e utilitários Unix-like, o HBoot também pode carregar diretamente, a partir de um módulo atualmente built-in (essa função será movida para um módulo standalone o quanto antes) o núcleo do sistema operacional de código livre FreeDOS, para que ferramentas utilitárias já estabelecidas e robustas que sejam executadas em ambiente DOS possam ser executadas sobre o volume e arquivos Andromeda®/Hexagon®. O FreeDOS foi escolhido devido a sua característica de kernel composto por um único arquivo, geralmente "KERNEL.SYS". Já outros DOS, como o MS-DOS, anterior a versão 7.0, utilizam dois arquivos que devem estar contíguos no disco, e isso não é possível aqui, visto que a instalação do FreeDOS ocorre já em um volume Andromeda/Hexagon®, com a cópia do kernel, interpretador de comando e outros utilitários DOS, sendo que o sistema operacional principal é o Andromeda®, com iniciação opcional do FreeDOS para alguma atividade em especial. Caso os componentes de sistema do FreeDOS não estejam presentes no disco (a cópia dos arquivos do FreeDOS não faz parte da instalação padrão), a inicialização em modo de compatibilidade DOS não irá ocorrer. A inicialização em modo DOS foi possível após pesquisa na documentação do FreeDOS, especialmente no arquivo "SYS.C", que indica que o kernel deve ser carregado no segmento 0x70, e arquivos do kernel que indicam que o parâmetro de disco de inicialização deve ser fornecido no registrador BL, diferentemente do Hexagon®, que recebe em DL. Cada sistema DOS apresenta um segmento de carregamento preferencial e esse carregamento de outras edições do DOS pode ser implementada futuramente com o auxílio dos módulos HBoot.

Uso do HBoot:
=============

Ao iniciar, o setor de inicialização do volume de boot padrão é carregado e em caso de carregamento do Saturno®, o primeiro estágio no processo de carregamento do Hexagon®, o mesmo carrega o HBoot diretamente do disco, em um volume formatado com um sistema de arquivos compatível. O HBoot então exibe algumas mensagens de inicialização e realiza alguns testes no hardware no computador, para verificar se o Hexagon® pode ser executado, como teste de processador e quantidade de memória RAM. Ao passar por esses testes, o HBoot aguarda por alguns segundos alguma interação do usuário para modificar o comportamento padrão de boot. Em caso negativo, ela busca, carrega e executa o kernel Hexagon®, localizado no arquivo "HEXAGON.SIS" no volume do sistema. Caso o usuário pressione a tecla [F8] no período de espera do HBoot, a inicialização é interrompida e o usuário é levado a um menu com diversas opções de modificação de comportamento. O usuário pode entçao fornecer uma linha de comando ao Hexagon®, obter informações sobre o ambiente de inicialização, o que inclui fabricante e assinatura do processador principal instalado, unidades de disco disponíveis conectadas ao computador, o volume utilizado para a inicialização (em todas as opções, o nome da unidade/volume segue a norma de nomenclatura de dispositivos do Hexagon®), a linha de comando (se nenhuma tiver sido fornecida pelo usuário, <vazio> será exibido), versão do HBoot e protocolo de boot e outras informações relevantes, que podem ser adicionadas e removidas a depender da versão do HBoot. Além disso, existe uma opão secreta no menu inicial, após o pressionamento de [F8], com o pressionamento da tecla [T] ou [t]. Essa opção apresenta diversas funções que não são finais, estão sendo testadas ou estão em desenvolvimento inicial ou ainda que serão removidas. O usuário pode sempre descartar alterações e iniciar o Hexagon®, ao menos que tenham entrado na opção de carregar módulos HBoot ou entrado em modo de inicialização de sistemas DOS.
Toda entrada de texto pelo usuário é demarcada por um prompt de entrada com a presença do caractere ">" seguido de um espaço simples, com o sistema aguardando a entrada e pressionamento da tecla [ENTER]/[RETURN]. Diversas ações também exigem o pressionamento de [ENTER]/[RETURN] ou qualquer tecla, como em opções de voltar ao menu anterior, parar ou iniciar algum teste de hardware também reiniciar o computador.

Módulos HBoot:
==============

Os módulos HBoot devem apresentar um cabeçalho no formato HBoot, e podem ser construídos em qualquer linguagem de programação cujas ferramentas de montagem/compilação gerem um binário puro. Um exemplo pode ser encontrado abaixo, com a assinatura de um módulo, que apresenta 5-bytes, seguido da arquitetura alvo, com 1-byte, ambos obrigatórios. A ausência do cabeçalho pode levar a mau funcionamento do módulo e execução imprevisível. O módulo deve sempre começar com código em 16-bit de modo real, e são sempre carregados no segmento 0x2000, sendo recomendado que o módulo também defina, por segurança, novamente os registradores de segmento para o segmento de carregamento. Tudo isso pode ser observado no exemplo de módulo disponível abaixo. O exemplo utiliza a sintaxe Intel e montador flat assembler (FASM). Módulos podem ser construídos sobre o Andromeda®, utilizando a IDE Lyoko e o montador FASM. Caso o ambiente DOS esteja instalado, o usuário pode utilizar utilitários DOS e o montador compatível de sua escolha, ou compiladores de outras linguagens, para gerar os módulos.

"
;;************************************************************************************
;;
;;    
;;                                Módulo do HBoot
;;        
;;                             Hexagon® Boot - HBoot
;;           
;;                 Copyright © 2020-2021 Felipe Miguel Nery Lunkes
;;                         Todos os direitos reservados
;;                                  
;;************************************************************************************

use16					

;; O módulo deve apresentar um cabeçalho especial de imagem HBoot
;; São 6 bytes, com assinatura (número mágico) e arquitetura alvo

cabecalhoHBoot:

.assinatura:  db "HBOOT"     ;; Assinatura, 5 bytes
.arquitetura: db 01h         ;; Arquitetura (i386), 1 byte

;; Configurar pilha e ponteiro

    cli				   ;; Desativar interrupções
    
    mov ax, 0x2000                 ;; Definir aqui os registradores de pilha
    mov ss, ax
    mov sp, 0
    
    sti				   ;; Habilitar interrupções
     
    clc 

    mov ax, 0x2000                 ;; Definir aqui os registradores de segmento
    mov ds, ax
    mov es, ax
    
    sti                            ;; Habilitar as interrupções
"

O teste dos módulos vai demandar o reinício da máquina e carregamento manual do módulo. Para isso, o usuário deverá fornecer um nome de arquivo no formato FAT, que é composto de 11-bytes, sendo 8 de nome de arquivo e 3 de extensão. Por convenção, os módulos HBoot, assim como o próprio, são arquivos em disco sem extensão. Então, o nome de arquivo do módulo está limitado a ter 8 caracteres de tamanho. O usuário deve carregar o módulo utilizando o seguinte exemplo: caso o nome de arquivo seja "oi.txt", o usuário deverá fornecer caracteres em maiúsculo, sem pontos, "OI      TXT", totalizando aqui então 11 carecteres, utilizando os espaços para preencher os vazios. Sempre a extensão deve ficar isolada no últimos três caracteres. Caso o arquivo apresente oito caracteres e a extensão, como em "abcdefgh.txt", o nome FAT seria "ABCDEFGHTXT". Já em caso de arquivo sem extensão, o usuário deverá utilizar o exemplo a seguir, como em "hboot", que se tornaria "HBOOT      ". No prompt de carregamento do HBoot, o usuário poderia apenas digitar HBOOT e pressionar e segurar a tecla espaço por alguns segundos (apenas os 11 primeiros caracteres são considerados, e isso auxilia o usuário a não precisar contar o número de espaços, mas não é válido para arquivos com extensão).